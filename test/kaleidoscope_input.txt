1+2;

3+4;

10-5;

6*8;

1/2;

extern sin(theta);
extern cos(theta);

def unit_circle(theta)
	sin(theta)*sin(theta) + cos(theta) * cos(theta);

unit_circle(4.0);

def test(x)
	(x+1+2)*(x+1+2);

test(10);

# The factorial function
def factorial_helper(n acc)
	if n < 1 then
		acc
	else
		factorial_helper(n-1, acc*n);

def factorial(n) factorial_helper(n, 1);

factorial(4);

1<2;

3>4;

extern putchard(X);

putchard(74);
putchard(111);
putchard(101);
putchard(121);

for i = 65, i < 65+25 in
	putchard(i);

def unary !(v)
	if v then
		0
	else
		1;

# Unary negate
def unary - (v)
	0-v; # Calls the binary minus operator

# Non short-circuiting logical or
def binary | 5(LHS RHS)
	if LHS then
		1
	else if RHS then
		1
	else
		0;

# Non short-circuiting logical and
def binary & 6(LHS RHS)
	if !LHS then
		0
	else
		!!RHS; # Convert RHS to a 0/1 with !!

# Equality operator
def binary = 9 (LHS RHS)
	!(LHS < RHS | LHS > RHS);

# Sequence several functions together
def binary : 1(x y) y;

def abs(v)
    if v > 0 then
        v
    else
        -v;

abs(32);
abs(-32);
